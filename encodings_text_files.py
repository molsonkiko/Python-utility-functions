#Taken from https://stackoverflow.com/users/1709587/mark-amery's answer to the question at https://stackoverflow.com/questions/1728376/get-a-list-of-all-the-encodings-python-can-encode-to

encodings = [None, #just use the default encoding method of Python's open() function.
	'utf_8',
	'utf_8_sig',
	'utf_32',
	'latin_1',
	'utf_32_be',
	'utf_32_le',
	'utf_16',
	'utf_16_be',
	'utf_16_le',
	'utf_7',
    'ascii',
  'big5',
 'big5hkscs',
 'cp037',
 'cp273',
 'cp424',
 'cp437',
 'cp500',
 'cp720',
 'cp737',
 'cp775',
 'cp850',
 'cp852',
 'cp855',
 'cp856',
 'cp857',
 'cp858',
 'cp860',
 'cp861',
 'cp862',
 'cp863',
 'cp864',
 'cp865',
 'cp866',
 'cp869',
 'cp874',
 'cp875',
 'cp932',
 'cp949',
 'cp950',
 'cp1006',
 'cp1026',
 'cp1125',
 'cp1140',
 'cp1250',
 'cp1251',
 'cp1252',
 'cp1253',
 'cp1254',
 'cp1255',
 'cp1256',
 'cp1257',
 'cp1258',
 'cp65001',
 'euc_jp',
 'euc_jis_2004',
 'euc_jisx0213',
 'euc_kr',
 'gb2312',
 'gbk',
 'gb18030',
 'hz',
 'iso2022_jp',
 'iso2022_jp_1',
 'iso2022_jp_2',
 'iso2022_jp_2004',
 'iso2022_jp_3',
 'iso2022_jp_ext',
 'iso2022_kr',
 'iso8859_2',
 'iso8859_3',
 'iso8859_4',
 'iso8859_5',
 'iso8859_6',
 'iso8859_7',
 'iso8859_8',
 'iso8859_9',
 'iso8859_10',
 'iso8859_11',
 'iso8859_13',
 'iso8859_14',
 'iso8859_15',
 'iso8859_16',
 'johab',
 'koi8_r',
 'koi8_t',
 'koi8_u',
 'kz1048',
 'mac_cyrillic',
 'mac_greek',
 'mac_iceland',
 'mac_latin2',
 'mac_roman',
 'mac_turkish',
 'ptcp154',
 'shift_jis',
 'shift_jis_2004',
 'shift_jisx0213',
 "idna",
 "mbcs",
 "oem",
 "palmos",
 "punycode",
 "raw_unicode_escape",
 "rot_13",
 "undefined",
 "unicode_escape",
 "unicode_internal",
 "base64_codec",
 "bz2_codec",
 "hex_codec",
 "quopri_codec",
 "uu_codec",
 "zlib_codec",
 'undefined' #always raises an exception
 ]
 
def get_encodings_this_python_version():
	import requests
	import lxml.html
	import pprint

	for version, url in [
		('2.3', 'https://docs.python.org/2.3/lib/node130.html'),
		('2.4', 'https://docs.python.org/2.4/lib/standard-encodings.html'),
		('2.5', 'https://docs.python.org/2.5/lib/standard-encodings.html'),
		('2.6', 'https://docs.python.org/2.6/library/codecs.html#standard-encodings'),
		('2.7', 'https://docs.python.org/2.7/library/codecs.html#standard-encodings'),
		('3.0', 'https://docs.python.org/3.0/library/codecs.html#standard-encodings'),
		('3.1', 'https://docs.python.org/3.1/library/codecs.html#standard-encodings'),
		('3.2', 'https://docs.python.org/3.2/library/codecs.html#standard-encodings'),
		('3.3', 'https://docs.python.org/3.3/library/codecs.html#standard-encodings'),
		('3.4', 'https://docs.python.org/3.4/library/codecs.html#standard-encodings'),
		('3.5', 'https://docs.python.org/3.5/library/codecs.html#standard-encodings'),
		('3.6', 'https://docs.python.org/3.6/library/codecs.html#standard-encodings'),
		('3.7', 'https://docs.python.org/3.7/library/codecs.html#standard-encodings'),
	]:
		html = requests.get(url).text
		doc = lxml.html.fromstring(html)
		standard_encodings_table = doc.xpath(
			'//table[preceding::h2[.//text()[contains(., "Standard Encodings")]]][//th/text()="Codec"]'
		)[0]
		codecs = standard_encodings_table.xpath('.//td[1]/text()')
		print("## Python %s (%i encodings)" % (version, len(codecs)))
		print('<pre><code>' + pprint.pformat(codecs) + '</code></pre>')